# This workflow installs the latest version of Terraform CLI and AWS Credentials. At 10 pm, this workflow will destroy all destroyable resources.

name: 'Destroy Terraform'

on:
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
    # Install the latest version of AWS CLI and configure the access keys
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt
      
    # Lists all resources
    - name: Terraform List State
      run: terraform state list
      
    # Remove backend s3 bucket from list state
    - name: Terraform State Remove
      run: terraform state rm aws_s3_bucket.terraform_current_state
        aws_s3_bucket_public_access_block.public_access
        aws_s3_bucket_server_side_encryption_configuration.default
        aws_s3_bucket_versioning.enabled

    # Destroys all Terraform resources
    - name: Terraform Destroy
      run: terraform destroy -auto-approve -input=false
